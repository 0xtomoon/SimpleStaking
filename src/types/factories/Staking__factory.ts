/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Staking, StakingInterface } from "../Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stakedToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdateBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakedToken",
    outputs: [
      {
        internalType: "contract StakedToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userRewardPerTokenPaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600a6004553480156200001657600080fd5b5060405162001a5838038062001a5883398181016040528101906200003c919062000127565b600160008190555082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050620001cb565b6000815190506200012181620001b1565b92915050565b6000806000606084860312156200013d57600080fd5b60006200014d8682870162000110565b9350506020620001608682870162000110565b9250506040620001738682870162000110565b9150509250925092565b60006200018a8262000191565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001bc816200017d565b8114620001c857600080fd5b50565b61187d80620001db6000396000f3fe608060405234801561001057600080fd5b50600436106100e95760003560e01c80638b8763471161008c578063cc7a262e11610066578063cc7a262e14610238578063cd3daf9d14610256578063df136d6514610274578063f7c618c114610292576100e9565b80638b876347146101ce578063a218141b146101fe578063a694fc3a1461021c576100e9565b80632e17de78116100c85780632e17de781461016c5780633d18b9121461018857806372f702f3146101925780637b0a47ee146101b0576100e9565b80628cc262146100ee5780630700037d1461011e57806318160ddd1461014e575b600080fd5b6101086004803603810190610103919061104e565b6102b0565b604051610115919061156e565b60405180910390f35b6101386004803603810190610133919061104e565b610422565b604051610145919061156e565b60405180910390f35b61015661043a565b604051610163919061156e565b60405180910390f35b610186600480360381019061018191906110a0565b610444565b005b61019061076b565b005b61019a610943565b6040516101a79190611436565b60405180910390f35b6101b8610969565b6040516101c5919061156e565b60405180910390f35b6101e860048036038101906101e3919061104e565b61096f565b6040516101f5919061156e565b60405180910390f35b610206610987565b604051610213919061156e565b60405180910390f35b610236600480360381019061023191906110a0565b61098d565b005b610240610bc9565b60405161024d9190611451565b60405180910390f35b61025e610bef565b60405161026b919061156e565b60405180910390f35b61027c610c52565b604051610289919061156e565b60405180910390f35b61029a610c58565b6040516102a79190611436565b60405180910390f35b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b815260040161030e91906113bb565b60206040518083038186803b15801561032657600080fd5b505afa15801561033a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035e91906110c9565b9050600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054670de0b6b3a7640000600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103f1610bef565b6103fb919061169c565b836104069190611642565b6104109190611611565b61041a91906115bb565b915050919050565b60086020528060005260406000206000915090505481565b6000600954905090565b6002600054141561048a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104819061154e565b60405180910390fd5b60026000819055503361049b610bef565b600681905550436005819055506104b1816102b0565b600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600654600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000821161057d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610574906114ce565b60405180910390fd5b81600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016105d991906113bb565b60206040518083038186803b1580156105f157600080fd5b505afa158015610605573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062991906110c9565b101561066a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610661906114ee565b60405180910390fd5b816009600082825461067c919061169c565b925050819055506106d03383600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610c7e9092919063ffffffff16565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac33846040518363ffffffff1660e01b815260040161072d92919061140d565b600060405180830381600087803b15801561074757600080fd5b505af115801561075b573d6000803e3d6000fd5b5050505050600160008190555050565b600260005414156107b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a89061154e565b60405180910390fd5b6002600081905550336107c2610bef565b600681905550436005819055506107d8816102b0565b600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600654600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506109373382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610c7e9092919063ffffffff16565b50506001600081905550565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b60076020528060005260406000206000915090505481565b60055481565b600260005414156109d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ca9061154e565b60405180910390fd5b6002600081905550336109e4610bef565b600681905550436005819055506109fa816102b0565b600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600654600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008211610ac6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abd9061148e565b60405180910390fd5b8160096000828254610ad891906115bb565b92505081905550610b2e333084600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610d04909392919063ffffffff16565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933846040518363ffffffff1660e01b8152600401610b8b92919061140d565b600060405180830381600087803b158015610ba557600080fd5b505af1158015610bb9573d6000803e3d6000fd5b5050505050600160008190555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806009541415610c045760009050610c4f565b600954670de0b6b3a764000060045460055443610c21919061169c565b610c2b9190611642565b610c359190611642565b610c3f9190611611565b600654610c4c91906115bb565b90505b90565b60065481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610cff8363a9059cbb60e01b8484604051602401610c9d92919061140d565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d8d565b505050565b610d87846323b872dd60e01b858585604051602401610d25939291906113d6565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d8d565b50505050565b6000610def826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610e549092919063ffffffff16565b9050600081511115610e4f5780806020019051810190610e0f9190611077565b610e4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e459061152e565b60405180910390fd5b5b505050565b6060610e638484600085610e6c565b90509392505050565b606082471015610eb1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea8906114ae565b60405180910390fd5b610eba85610f80565b610ef9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef09061150e565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610f2291906113a4565b60006040518083038185875af1925050503d8060008114610f5f576040519150601f19603f3d011682016040523d82523d6000602084013e610f64565b606091505b5091509150610f74828286610f93565b92505050949350505050565b600080823b905060008111915050919050565b60608315610fa357829050610ff3565b600083511115610fb65782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fea919061146c565b60405180910390fd5b9392505050565b60008135905061100981611802565b92915050565b60008151905061101e81611819565b92915050565b60008135905061103381611830565b92915050565b60008151905061104881611830565b92915050565b60006020828403121561106057600080fd5b600061106e84828501610ffa565b91505092915050565b60006020828403121561108957600080fd5b60006110978482850161100f565b91505092915050565b6000602082840312156110b257600080fd5b60006110c084828501611024565b91505092915050565b6000602082840312156110db57600080fd5b60006110e984828501611039565b91505092915050565b6110fb816116d0565b82525050565b600061110c82611589565b611116818561159f565b9350611126818560208601611760565b80840191505092915050565b61113b81611718565b82525050565b61114a8161173c565b82525050565b600061115b82611594565b61116581856115aa565b9350611175818560208601611760565b61117e816117f1565b840191505092915050565b6000611196600e836115aa565b91507f43616e6e6f74207374616b6520300000000000000000000000000000000000006000830152602082019050919050565b60006111d66026836115aa565b91507f416464726573733a20696e73756666696369656e742062616c616e636520666f60008301527f722063616c6c00000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061123c6011836115aa565b91507f43616e6e6f7420776974686472617720300000000000000000000000000000006000830152602082019050919050565b600061127c6013836115aa565b91507f496e73756666696369656e7420616d6f756e74000000000000000000000000006000830152602082019050919050565b60006112bc601d836115aa565b91507f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006000830152602082019050919050565b60006112fc602a836115aa565b91507f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008301527f6f742073756363656564000000000000000000000000000000000000000000006020830152604082019050919050565b6000611362601f836115aa565b91507f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006000830152602082019050919050565b61139e8161170e565b82525050565b60006113b08284611101565b915081905092915050565b60006020820190506113d060008301846110f2565b92915050565b60006060820190506113eb60008301866110f2565b6113f860208301856110f2565b6114056040830184611395565b949350505050565b600060408201905061142260008301856110f2565b61142f6020830184611395565b9392505050565b600060208201905061144b6000830184611132565b92915050565b60006020820190506114666000830184611141565b92915050565b600060208201905081810360008301526114868184611150565b905092915050565b600060208201905081810360008301526114a781611189565b9050919050565b600060208201905081810360008301526114c7816111c9565b9050919050565b600060208201905081810360008301526114e78161122f565b9050919050565b600060208201905081810360008301526115078161126f565b9050919050565b60006020820190508181036000830152611527816112af565b9050919050565b60006020820190508181036000830152611547816112ef565b9050919050565b6000602082019050818103600083015261156781611355565b9050919050565b60006020820190506115836000830184611395565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006115c68261170e565b91506115d18361170e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561160657611605611793565b5b828201905092915050565b600061161c8261170e565b91506116278361170e565b925082611637576116366117c2565b5b828204905092915050565b600061164d8261170e565b91506116588361170e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561169157611690611793565b5b828202905092915050565b60006116a78261170e565b91506116b28361170e565b9250828210156116c5576116c4611793565b5b828203905092915050565b60006116db826116ee565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006117238261172a565b9050919050565b6000611735826116ee565b9050919050565b60006117478261174e565b9050919050565b6000611759826116ee565b9050919050565b60005b8381101561177e578082015181840152602081019050611763565b8381111561178d576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b61180b816116d0565b811461181657600080fd5b50565b611822816116e2565b811461182d57600080fd5b50565b6118398161170e565b811461184457600080fd5b5056fea2646970667358221220581ba445df0ef3399060cfe9ceab44e8cb5d512a35317e940ecd22639f7b075164736f6c63430008000033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _stakingToken: string,
    _rewardToken: string,
    _stakedToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Staking> {
    return super.deploy(
      _stakingToken,
      _rewardToken,
      _stakedToken,
      overrides || {}
    ) as Promise<Staking>;
  }
  getDeployTransaction(
    _stakingToken: string,
    _rewardToken: string,
    _stakedToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _stakingToken,
      _rewardToken,
      _stakedToken,
      overrides || {}
    );
  }
  attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
