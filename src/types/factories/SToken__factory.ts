/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SToken, STokenInterface } from "../SToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_STAKING",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "STAKING",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001e4638038062001e468339818101604052810190620000379190620001dc565b6040518060400160405280600c81526020017f5374616b656420546f6b656e00000000000000000000000000000000000000008152506040518060400160405280600481526020017f53544b4e000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000bb92919062000115565b508060049080519060200190620000d492919062000115565b5050508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050620002bb565b82805462000123906200023c565b90600052602060002090601f01602090048101928262000147576000855562000193565b82601f106200016257805160ff191683800117855562000193565b8280016001018555821562000193579182015b828111156200019257825182559160200191906001019062000175565b5b509050620001a29190620001a6565b5090565b5b80821115620001c1576000816000905550600101620001a7565b5090565b600081519050620001d681620002a1565b92915050565b600060208284031215620001ef57600080fd5b6000620001ff84828501620001c5565b91505092915050565b600062000215826200021c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600060028204905060018216806200025557607f821691505b602082108114156200026c576200026b62000272565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b620002ac8162000208565b8114620002b857600080fd5b50565b60805160601c611b65620002e16000396000818161059d01526107a90152611b656000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806342966c681161009757806397610f301161006657806397610f3014610286578063a457c2d7146102a4578063a9059cbb146102d4578063dd62ed3e14610304576100f5565b806342966c681461020057806370a082311461021c57806379cc67901461024c57806395d89b4114610268576100f5565b806323b872dd116100d357806323b872dd14610166578063313ce5671461019657806339509351146101b457806340c10f19146101e4576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b610102610334565b60405161010f919061175a565b60405180910390f35b610132600480360381019061012d91906111ce565b6103c6565b60405161013f919061173f565b60405180910390f35b6101506103e4565b60405161015d91906118fc565b60405180910390f35b610180600480360381019061017b919061117f565b6103ee565b60405161018d919061173f565b60405180910390f35b61019e6104e6565b6040516101ab9190611917565b60405180910390f35b6101ce60048036038101906101c991906111ce565b6104ef565b6040516101db919061173f565b60405180910390f35b6101fe60048036038101906101f991906111ce565b61059b565b005b61021a6004803603810190610215919061120a565b61063e565b005b6102366004803603810190610231919061111a565b610652565b60405161024391906118fc565b60405180910390f35b610266600480360381019061026191906111ce565b61069a565b005b610270610715565b60405161027d919061175a565b60405180910390f35b61028e6107a7565b60405161029b9190611724565b60405180910390f35b6102be60048036038101906102b991906111ce565b6107cb565b6040516102cb919061173f565b60405180910390f35b6102ee60048036038101906102e991906111ce565b6108b6565b6040516102fb919061173f565b60405180910390f35b61031e60048036038101906103199190611143565b6108d4565b60405161032b91906118fc565b60405180910390f35b60606003805461034390611a60565b80601f016020809104026020016040519081016040528092919081815260200182805461036f90611a60565b80156103bc5780601f10610391576101008083540402835291602001916103bc565b820191906000526020600020905b81548152906001019060200180831161039f57829003601f168201915b5050505050905090565b60006103da6103d361095b565b8484610963565b6001905092915050565b6000600254905090565b60006103fb848484610b2e565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061044661095b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156104c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bd9061181c565b60405180910390fd5b6104da856104d261095b565b858403610963565b60019150509392505050565b60006012905090565b60006105916104fc61095b565b84846001600061050a61095b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461058c919061194e565b610963565b6001905092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166105da61095b565b73ffffffffffffffffffffffffffffffffffffffff1614610630576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610627906117dc565b60405180910390fd5b61063a8282610daf565b5050565b61064f61064961095b565b82610f0f565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006106ad836106a861095b565b6108d4565b9050818110156106f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e99061183c565b60405180910390fd5b610706836106fe61095b565b848403610963565b6107108383610f0f565b505050565b60606004805461072490611a60565b80601f016020809104026020016040519081016040528092919081815260200182805461075090611a60565b801561079d5780601f106107725761010080835404028352916020019161079d565b820191906000526020600020905b81548152906001019060200180831161078057829003601f168201915b5050505050905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080600160006107da61095b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610897576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088e906118bc565b60405180910390fd5b6108ab6108a261095b565b85858403610963565b600191505092915050565b60006108ca6108c361095b565b8484610b2e565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156109d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ca9061189c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3a906117bc565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610b2191906118fc565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b959061187c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c059061177c565b60405180910390fd5b610c198383836110e6565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c96906117fc565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d32919061194e565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d9691906118fc565b60405180910390a3610da98484846110eb565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e16906118dc565b60405180910390fd5b610e2b600083836110e6565b8060026000828254610e3d919061194e565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e92919061194e565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ef791906118fc565b60405180910390a3610f0b600083836110eb565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f769061185c565b60405180910390fd5b610f8b826000836110e6565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611011576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110089061179c565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816002600082825461106891906119a4565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110cd91906118fc565b60405180910390a36110e1836000846110eb565b505050565b505050565b505050565b6000813590506110ff81611b01565b92915050565b60008135905061111481611b18565b92915050565b60006020828403121561112c57600080fd5b600061113a848285016110f0565b91505092915050565b6000806040838503121561115657600080fd5b6000611164858286016110f0565b9250506020611175858286016110f0565b9150509250929050565b60008060006060848603121561119457600080fd5b60006111a2868287016110f0565b93505060206111b3868287016110f0565b92505060406111c486828701611105565b9150509250925092565b600080604083850312156111e157600080fd5b60006111ef858286016110f0565b925050602061120085828601611105565b9150509250929050565b60006020828403121561121c57600080fd5b600061122a84828501611105565b91505092915050565b61123c816119d8565b82525050565b61124b816119ea565b82525050565b600061125c82611932565b611266818561193d565b9350611276818560208601611a2d565b61127f81611af0565b840191505092915050565b600061129760238361193d565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006112fd60228361193d565b91507f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008301527f63650000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061136360228361193d565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006113c960108361193d565b91507f5374616b696e6720636f6e7472616374000000000000000000000000000000006000830152602082019050919050565b600061140960268361193d565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061146f60288361193d565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206160008301527f6c6c6f77616e63650000000000000000000000000000000000000000000000006020830152604082019050919050565b60006114d560248361193d565b91507f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f7760008301527f616e6365000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061153b60218361193d565b91507f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008301527f73000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006115a160258361193d565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061160760248361193d565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061166d60258361193d565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006116d3601f8361193d565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b61170f81611a16565b82525050565b61171e81611a20565b82525050565b60006020820190506117396000830184611233565b92915050565b60006020820190506117546000830184611242565b92915050565b600060208201905081810360008301526117748184611251565b905092915050565b600060208201905081810360008301526117958161128a565b9050919050565b600060208201905081810360008301526117b5816112f0565b9050919050565b600060208201905081810360008301526117d581611356565b9050919050565b600060208201905081810360008301526117f5816113bc565b9050919050565b60006020820190508181036000830152611815816113fc565b9050919050565b6000602082019050818103600083015261183581611462565b9050919050565b60006020820190508181036000830152611855816114c8565b9050919050565b600060208201905081810360008301526118758161152e565b9050919050565b6000602082019050818103600083015261189581611594565b9050919050565b600060208201905081810360008301526118b5816115fa565b9050919050565b600060208201905081810360008301526118d581611660565b9050919050565b600060208201905081810360008301526118f5816116c6565b9050919050565b60006020820190506119116000830184611706565b92915050565b600060208201905061192c6000830184611715565b92915050565b600081519050919050565b600082825260208201905092915050565b600061195982611a16565b915061196483611a16565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561199957611998611a92565b5b828201905092915050565b60006119af82611a16565b91506119ba83611a16565b9250828210156119cd576119cc611a92565b5b828203905092915050565b60006119e3826119f6565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611a4b578082015181840152602081019050611a30565b83811115611a5a576000848401525b50505050565b60006002820490506001821680611a7857607f821691505b60208210811415611a8c57611a8b611ac1565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b611b0a816119d8565b8114611b1557600080fd5b50565b611b2181611a16565b8114611b2c57600080fd5b5056fea2646970667358221220475830cffbb11e4033ecb7dba2a21b9cfdb8eaf56f44577dbb1b114a5bbd902764736f6c63430008000033";

type STokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: STokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SToken__factory extends ContractFactory {
  constructor(...args: STokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _STAKING: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SToken> {
    return super.deploy(_STAKING, overrides || {}) as Promise<SToken>;
  }
  getDeployTransaction(
    _STAKING: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_STAKING, overrides || {});
  }
  attach(address: string): SToken {
    return super.attach(address) as SToken;
  }
  connect(signer: Signer): SToken__factory {
    return super.connect(signer) as SToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): STokenInterface {
    return new utils.Interface(_abi) as STokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): SToken {
    return new Contract(address, _abi, signerOrProvider) as SToken;
  }
}
